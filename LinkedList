package practice_question;

public class LL {
	Node head;
	private int size;
	LL(){
		this.size=0;
		
	}
	class Node{
		String data;
		Node next;
		Node(String data){
			this.data=data;
			this.next=null;
			size++;
		}
	}


	
	                        //add-first,last
	
	public void addfirst(String data) {
		Node newNode=new Node(data);
		if(head==null) {
			head=newNode;
			return;
		}
		newNode.next=head;
		head=newNode;
		
	}
	public void addLast(String data) {
		Node newNode=new Node(data);
		if(head==null) {
			head=newNode;
			return;
		}
		Node currNode=head;
		while(currNode.next!=null) {
			currNode =currNode.next;
		}
		currNode.next=newNode;
	}
                       	//print 
	public void printList() {
		
		
		if(head==null) {
			System.out.println("List is empty");
			return;
		}
		Node currNode=head;
		while(currNode!=null) {
			System.out.print(currNode.data+" -> ");
			currNode =currNode.next;
		}
		System.out.println("NULL");
	}
	                    //delete first
	public void deleteF() {
		if(head==null) {
			System.out.println("list is empty");
			return;
		}
		size--;
		head=head.next;
		
	}
                 	//delete last
	public void deleteL() {
		if(head==null) {
			System.out.println("list is empty");
			return;
		}
		size--;
		if(head.next==null) {
			head=null;
			return;
		}
		Node secondL=head;
		Node lastNode=head.next;
		while(lastNode.next!=null) {
			lastNode=lastNode.next;
			secondL=secondL.next;
		}
		secondL.next=null;
	}
	public int getsize() {
		return size;
	}
	
public static void main(String[] args) {
	LL list=new LL();
	list.addfirst("a");
	list.addfirst("is");
	list.printList();
	list.addLast("lsit");
	list.printList();
	list.addfirst("this");
	list.printList();
	
	list.deleteF();
	list.printList();
	list.deleteL();
	list.printList();
	System.out.println(list.getsize());
	list.addfirst("this");
	list.printList();
	System.out.println(list.getsize());
}
}
